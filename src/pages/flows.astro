---
import BaseLayout from "../layouts/BaseLayout.astro";

import AboutOne from "../components/about/AboutOne.astro";
import FeatureEleven from "../components/features/FeatureEleven.astro";
import TestimonialFour from "../components/testimonials/TestimonialFour.astro";
import FeatureTwelve from "../components/features/FeatureTwelve.astro";
import FeatureFive from "../components/features/FeatureFive.astro";
import StatsTwo from "../components/stats/StatsTwo.astro";
import CtaOne from "../components/cta/CtaOne.astro";
import { Code } from "astro/components";
import { AstroSeo } from "@astrolib/seo";


// Header

const header = {
  title: "Empress Flows",
  subtitle: "Automate Your Business,",
  subtitleCont: "Streamline Your Success.",
  imageSrc: "/images/chart.jpg"
};

// Feature 1

const featureOne = {
  sections: [
    {
      type: "feature",
      title: "Workflow Automation",
      mainTitle: "Streamlined Business Processes",
      descriptions: [
        "Empress Flows bring efficiency to your business operations, automating routine tasks and ensuring seamless workflows.",
        "Experience the power of automated processes, freeing up time for strategic thinking and business growth."
      ],
      imagePaths: [
        "/images/creditcardTwo.png",
        "/images/balance.png",
        "/images/notification.png",
        "/images/miniNotification.png",
        "/images/payments.png",
        "/images/payments.png",
        "/images/creditcardTwo.png"
      ],
      bgColor: "white",
      textColor: "blue-600",
      gridCols: "lg:grid-cols-2"
    },
    {
      type: "featureSkewed",
      title: "Customizable Flows",
      mainTitle: "Tailored Automation Solutions",
      description: "Create custom workflows that fit your unique business needs, allowing for flexible and adaptive process automation.",
      points: [
        {
          title: "Intuitive Flow Design",
          description: "Easily design workflows with our drag-and-drop interface, making automation accessible to everyone."
        },
        {
          title: "Adaptive Triggers and Actions",
          description: "Set up triggers and actions tailored to your business processes for maximum efficiency."
        },
        {
          title: "Cross-Platform Integration",
          description: "Integrate seamlessly with existing tools and platforms for a unified operational experience."
        }
      ],
      bgColor: "purple-900",
      textColor: "white",
      gridCols: "lg:grid-cols-3",
      transform: "skew-y-6",
      marginAdjustment: "-mt-72 lg:-mt-[26rem]"
    }
  ]
};

// Feature Two

const featureTwo = {
  header: {
    title: "Operational Insights",
    mainTitle: "Monitor and Optimize Workflows",
    subTitle: "Gain valuable insights into your automated processes and continuously improve your operational efficiency."
  },
  columns: [
    {
      title: "Real-Time Monitoring",
      listItems: [
        "Track workflow performance in real time",
        "Identify bottlenecks and optimize processes",
        "Ensure smooth and efficient operations"
      ]
    },
    {
      title: "Analytics and Reporting",
      listItems: [
        "Detailed analytics on workflow effectiveness",
        "Customizable reports for business insights",
        "Data-driven decision making for continuous improvement"
      ]
    }
  ],
  imageSrc: "/images/chart.jpg"
};

// Feature List

const features = [
  {
    header: {
      mainTitle: "Empower Your Team",
      subTitle: "Enhance Productivity and Collaboration",
      description: "Empress Flows caters to a wide array of business needs, simplifying complex processes across different departments and industries."
    },
    featureSections: [
      {
        title: "Marketing Campaign Automation",
        description: "Automate your marketing campaigns, from email sequences to social media posts, to reach audiences effectively.",
        listItems: [
          "Scheduled social media postings",
          "Automated email marketing sequences",
          "Lead nurturing workflows"
        ]
      },
      {
        title: "Sales Process Optimization",
        description: "Streamline your sales pipeline with automated lead tracking, follow-ups, and performance analytics.",
        listItems: [
          "Lead assignment and follow-up automation",
          "Sales pipeline tracking and reporting",
          "Performance analytics for sales strategies"
        ]
      },
      {
        title: "Customer Service Enhancement",
        description: "Improve customer service with automated ticketing, response templates, and service feedback loops.",
        listItems: [
          "Automated ticketing system",
          "Predefined response templates",
          "Customer feedback and resolution tracking"
        ]
      },
      {
        title: "HR and Recruitment Processes",
        description: "Simplify HR operations from recruitment to onboarding, including automated applicant tracking and employee management.",
        listItems: [
          "Automated applicant tracking",
          "Streamlined employee onboarding processes",
          "Employee performance and leave management"
        ]
      },
      {
        title: "Financial Management Automation",
        description: "Automate financial tasks like invoicing, expense tracking, and budgeting to ensure accuracy and compliance.",
        listItems: [
          "Automated invoicing and payment reminders",
          "Expense tracking and budgeting tools",
          "Financial reporting and compliance checks"
        ]
      },
      {
        title: "Supply Chain and Inventory Control",
        description: "Enhance supply chain efficiency with automated inventory management, order processing, and logistics coordination.",
        listItems: [
          "Real-time inventory tracking",
          "Automated order processing",
          "Logistics and delivery coordination"
        ]
      }
    ]
  }
];


// Dark Background

const sectionSeven = {
  featureTitle: "Developer-Friendly Tools",
  mainTitle: "Create Custom Workflows with Ease",
  description: "Empress Flows provides developers with robust tools to create and manage custom workflows efficiently.",
  tabs: [
    {
      title: "Workflow API",
      image: "/images/ModalOne.png",
      codeSnippet: `import EmpressAPI from 'empress-sdk';
import { Workflow } from 'empress-models';

const empress = new EmpressAPI({
  apiKey: 'YOUR_API_KEY'
});

export async function createWorkflow(workflowData) {
  try {
    const workflow = new Workflow(workflowData);
    await empress.workflows.create(workflow);
    return 'Workflow created successfully';
  } catch (error) {
    console.error('Error creating workflow:', error);
  }
};`
    },
    {
      title: "Automate Tasks",
      image: "/images/ModalTwo.png",
      codeSnippet: `import EmpressAPI from 'empress-sdk';
import { TaskAutomation } from 'empress-models';

const empress = new EmpressAPI({
  apiKey: 'YOUR_API_KEY'
});

export async function automateTask(taskData) {
  try {
    const task = new TaskAutomation(taskData);
    await empress.tasks.automate(task);
    return 'Task automated successfully';
  } catch (error) {
    console.error('Error automating task:', error);
  }
};`
    }
  ]
};

// Check Marks

const sectionData = {
  mainTitle: "Empress Flows Features",
  mainSubTitle: "Enhance Your Business with Advanced Automation",
  description: "Empress Flows offers a wide range of features to automate and streamline your business processes.",
  articles: [
    {
      title: "Process Automation",
      features: [
        "Automated Task Management",
        "Efficient Resource Allocation",
        "Streamlined Business Workflows"
      ]
    },
    {
      title: "Integration Capabilities",
      features: [
        "Seamless System Connectivity",
        "Cross-Platform Data Synchronization",
        "Easy-to-Use Integration Tools"
      ]
    },
    {
      title: "Customization and Flexibility",
      features: [
        "User-Friendly Flow Customization",
        "Flexible Trigger and Action Settings",
        "Adaptive to Changing Business Needs"
      ]
    },
    {
      title: "Real-Time Data Processing",
      features: [
        "Instant Data Analysis and Reporting",
        "Live Monitoring of Business Metrics",
        "Dynamic Data Update and Management"
      ]
    },
    {
      title: "Collaboration and Sharing",
      features: [
        "Team Collaboration within Workflows",
        "Shared Access to Critical Data",
        "Centralized Communication Platform"
      ]
    },
    {
      title: "Security and Compliance",
      features: [
        "Robust Data Encryption and Security",
        "Compliance with Industry Standards",
        "Secure Access Controls and Protocols"
      ]
    }
  ]
};





// FAQs

const faq = {
  title: "FAQ",
  subtitle: "Your Workflow Questions, Answered",
  questions: [
    {
      question: "Can Empress Flows integrate with my existing tools?",
      answer: "Yes, Empress Flows seamlessly integrates with a wide range of business tools including CRM systems, accounting software, and more. This integration ensures that your existing data and processes are synchronized for a cohesive workflow experience."
    },
    {
      question: "How easy is it to set up Empress Flows?",
      answer: "Empress Flows is designed with user-friendliness in mind. The setup process is straightforward, aided by a drag-and-drop interface and pre-built templates. Additionally, we offer comprehensive guides and tutorials to assist you in getting started quickly and efficiently."
    },
    {
      question: "What kind of support does Empress offer for workflow automation?",
      answer: "We offer a multi-tier support system to cater to different user needs. This includes detailed documentation, responsive customer service, and for our Enterprise plan users, dedicated account managers and technical support to assist with complex workflow setups and customization."
    },
    {
      question: "Are there any customization options in Empress Flows?",
      answer: "Absolutely! Empress Flows is highly customizable, allowing you to create workflows that align precisely with your business processes. You can design custom triggers, actions, and conditions, and integrate with APIs to extend functionality according to your business requirements."
    },
    {
      question: "How secure are my automated workflows with Empress Flows?",
      answer: "At Empress Flows, we prioritize the security of your data and automated processes. We employ industry-standard security protocols including encryption, regular security audits, and compliance with data protection regulations to ensure that your workflows and data are protected against unauthorized access and breaches."
    }
  ]
};



---



<!---
Use AstroSeo in all the pages you want different Seo than the index page
-->
<AstroSeo
  title="About 01"
  description="Your site description goes here"
  canonical="https://www.lexingtonthemes.com"
  openGraph={{
    url: "https://www.lexingtonthemes.com",
    title: "Open Graph Title",
    description: "Open Graph Description",
    images: [
      {
        url: "https://www.lexingtonthemes.com/opengraph/social-og.jpg",
        width: 1200,
        height: 630,
        alt: "Social open graph",
        type: "image/jpeg",
      },
      {
        url: "https://www.lexingtonthemes.com/opengraph/twitter-og.jpg",
        width: 4096,
        height: 4096,
        alt: "Twitter open graph",
        type: "image/jpeg",
      },
      { url: "https://www.lexingtonthemes.com/opengraph/social-og.jpg" },
      { url: "https://www.lexingtonthemes.com/opengraph/twitter-og.jpg" },
    ],
    site_name: "YourSitesName",
  }}
  twitter={{
    handle: "@TwitterHandle",
    site: "@site",
    cardType: "summary_large_image",
  }}
/>
<BaseLayout>


<!-- Header -->

  <section>
    <div class="mx-auto max-w-7xl lg:px-16 md:px-12 px-8 xl:px-24 py-24 items-center">
      <div class="lg:text-center">
        <h2 class="inline-flex items-center text-blue-600">
          <span class="text-base font-medium tracking-tight">{header.title}</span>
        </h2>
        <h2 class="text-purple-900 font-semibold tracking-tighter lg:text-5xl mt-6 text-3xl">
          {header.subtitle}
          <span class="lg:block">{header.subtitleCont}</span>
        </h2>
      </div>
      <div class="w-full -mb-12 mt-12 ring-1 ring-slate-200 bg-slate-50 rounded-t-3xl p-3">
        <img src={header.imageSrc} alt="thumbnail" class="drop-shadow-2xl rounded-t-2xl w-full ring-1 ring-slate-200" />
      </div>
    </div>
  </section>


  <!-- Feature 1 -->

  <section >
    <div
      class="mx-auto max-w-7xl lg:px-16 md:px-12 px-8 xl:px-24 py-24 items-center">
      <div>
        <h2 class="inline-flex items-center rounded-full text-blue-600">
          <span class="text-base font-medium tracking-tight">{featureOne.sections[0].title}</span>
        </h2>
        <h2
          class="text-purple-900 font-semibold tracking-tighter lg:text-5xl mt-6 text-3xl">
          {featureOne.sections[0].mainTitle}
          <span class="lg:block">{featureOne.sections[0].secondaryTitle}</span>
        </h2>
        <div class="mx-auto text-left mt-12">
          <div>
            <div class="lg:gap-12 grid grid-cols-1 lg:grid-cols-2">
              <div>
                <p class="text-slate-500">
                  {featureOne.sections[0].descriptions[0]}
                </p>
              </div>
              <div>
                <p class="text-slate-500">
                  {featureOne.sections[0].descriptions[1]}
                </p>
              </div>
            </div>
          </div>
        </div>
  
        <div class="grid lg:grid-cols-4 grid-cols-2 mt-24 gap-3">
          <div>
            <img
              src={featureOne.sections[0].imagePaths[0]}
              alt="thumbnail"
              class="rounded-2xl drop-shadow-2xl"
            />
            <img
            src={featureOne.sections[0].imagePaths[1]}
              alt="thumbnail"
              class="drop-shadow-2xl mt-6"
            />
          </div>
          <div class="lg:col-span-2">
            <img
            src={featureOne.sections[0].imagePaths[2]}
              alt="thumbnail"
              class="drop-shadow-2xl"
            />
            <img
            src={featureOne.sections[0].imagePaths[3]}
              alt="thumbnail"
              class="drop-shadow-2xl mt-6"
            />
            <img
            src={featureOne.sections[0].imagePaths[4]}
              alt="thumbnail"
              class="drop-shadow-2xl mt-6 lg:hidden block"
            />
          </div>
          <div class="hidden lg:block">
            <img
            src={featureOne.sections[0].imagePaths[5]}
              alt="thumbnail"
              class="drop-shadow-2xl"
            />
            <img
            src={featureOne.sections[0].imagePaths[6]}
              alt="thumbnail"
              class="rounded-2xl drop-shadow-2xl mt-6"
            />
          </div>
        </div>
      </div>
    </div>
  </section>
  <section class="bg-purple-900 transform skew-y-6 -mt-72 lg:-mt-[26rem]">
  <div
    class="mx-auto max-w-7xl lg:px-16 md:px-12 px-8 xl:px-24 py-24 lg:py-52 items-center transform -skew-y-6">
    <div>
      <h2 class="inline-flex items-center text-white">
        <span class="text-base font-medium tracking-tight">{featureOne.sections[1].title}</span>
      </h2>
      <h2
        class="tracking-tighter lg:text-5xl text-white font-semibold mt-6 text-3xl lg:mx-auto">
        {featureOne.sections[1].mainTitle} <span class="lg:block"
          >{featureOne.sections[1].secondaryTitle}</span
        >
      </h2>
      <div class="max-w-xl mt-6">
        <p class="text-white">
          {featureOne.sections[1].description}
        </p>
      </div>
    </div>
    <div class="mx-auto text-left mt-12">
      <div>
        <div class="gap-x-2 gap-y-14 lg:gap-12 grid grid-cols-1 lg:grid-cols-3">
          <div>
            <div class="space-y-3">
              <div>
                <p class="mt-5 font-semibold text-white text-base">
                  {featureOne.sections[1].points[0].title}
                </p>
              </div>
              <p class="text-sm text-white">
                {featureOne.sections[1].points[0].description}
              </p>
            </div>
          </div>
          <div>
            <div class="space-y-3">
              <div>
                <p class="mt-5 font-semibold text-white text-base">
                  {featureOne.sections[1].points[1].title}
                </p>
              </div>
              <p class="text-sm text-white">
                {featureOne.sections[1].points[1].description}
              </p>
            </div>
          </div>
          <div>
            <div class="space-y-3">
              <div>
                <p class="mt-5 font-semibold text-white text-base">
                  {featureOne.sections[1].points[2].title}
                </p>
              </div>
              <p class="text-sm text-white">
                {featureOne.sections[1].points[2].description}
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>


<!-- Feature Two -->

  <section class="overflow-hidden border-b">
    <div class="mx-auto max-w-7xl lg:px-16 md:px-12 px-8 xl:px-24 pt-24 items-center">
      <div>
        <h2 class="inline-flex items-center text-blue-600">
          <span class="text-base font-medium tracking-tight">{featureTwo.header.title}</span>
        </h2>
        <h2 class="text-purple-900 font-semibold tracking-tighter lg:text-5xl mt-6 text-3xl">
          {featureTwo.header.mainTitle}
        </h2>
        <div class="max-w-xl mt-6">
          <p class="text-slate-500">{featureTwo.header.subTitle}</p>
        </div>
      </div>
      <div class="mx-auto text-left mt-12">
        <div>
          <div class="gap-x-2 gap-y-14 lg:gap-12 grid grid-cols-1 lg:grid-cols-2">
            {featureTwo.columns.map(column => (
              <div>
                <div>
                  <p class="font-semibold text-purple-900">{column.title}</p>
                  <div class="mt-6">
                    <ul role="list" class="order-last flex flex-col gap-y-2 text-sm text-slate-500">
                      {column.listItems.map(item => (
                        <li class="flex items-start">
                          — <span class="ml-4">{item}</span>
                        </li>
                      ))}
                    </ul>
                  </div>
                </div>
              </div>
            ))}
          </div>
          <div class="w-full -mb-12 mt-12 ring-1 ring-slate-200 bg-slate-50 rounded-t-3xl p-3">
            <img src={featureTwo.imageSrc} alt="thumbnail" class="drop-shadow-2xl rounded-t-2xl w-full ring-1 ring-slate-200" />
          </div>
        </div>
      </div>
    </div>
  </section>


  <!-- Feature List -->


  <section class="bg-white">
    <div class="mx-auto max-w-7xl lg:px-16 md:px-12 px-8 xl:px-24 py-32 items-center">
      {features.map((feature, featureIndex) => (
        <div key={featureIndex}>
          <h2 class="text-purple-900 font-semibold tracking-tighter lg:text-5xl mt-8 text-3xl">
            {feature.header.mainTitle}
           </h2>
           <p class="mt-4 text-slate-600 text-lg">
            {feature.header.description}
        </p>
          <div class="mt-16">
            {feature.featureSections.map((section, index) => (
              <div key={index} class="lg:col-span-3 lg:col-start-3">
                <div class="grid grid-cols-1 lg:grid-cols-3">
                  <div class="bg-slate-50 border-l-2 border-blue-500">
                    <div class="p-6 border-t">
                      <p class="font-semibold text-purple-900">{section.title}</p>
                    </div>
                  </div>
                  <div class="lg:col-span-1 p-6 border-t lg:border-l border-l-0">
                    <p class="text-slate-500 text-sm">{section.description}</p>
                  </div>
                  <div class="lg:col-span-1 p-6 border-t lg:border-l">
                    <ul role="list" class="order-last flex flex-col gap-y-3 text-sm text-slate-500">
                      {section.listItems.map((item, itemIndex) => (
                        <li key={itemIndex} class="flex items-start">
                          <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-circle-check" width="20" height="20" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                            <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                            <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0"></path>
                            <path d="M9 12l2 2l4 -4"></path>
                          </svg>
                          <span class="ml-4">{item}</span>
                        </li>
                      ))}
                    </ul>
                  </div>
                </div>
              </div>
            ))}
          </div>
          {featureIndex < features.length - 1 && (
            <div class="grid grid-cols-1 lg:grid-cols-5 pt-8 border-t"></div>
          )}
        </div>
      ))}
    </div>
  </section>



  <!-- Dark Tab -->

  <section class="bg-purple-900 transform skew-y-6">
    <div class="mx-auto max-w-7xl lg:px-16 md:px-12 px-8 xl:px-24 py-24 lg:pt-42 pb-52 items-center transform -skew-y-6">
      <div>
        <h2 class="inline-flex items-center rounded-full text-white">
          <span class="text-base font-medium tracking-tight">{sectionSeven.featureTitle}</span>
        </h2>
        <h2 class="text-white font-semibold tracking-tighter lg:text-5xl mt-6 text-3xl">
          {sectionSeven.mainTitle} <span class="lg:block">{sectionSeven.mainSubtitle}</span>
        </h2>
        <div class="max-w-xl mt-6">
          <p class="text-white">{sectionSeven.description}</p>
        </div>
      </div>
    <div class="mx-auto text-left mt-12">
      <div
        x-data="{
        tabSelected: 1,
        tabId: $id('tabs'),
        tabButtonClicked(tabButton){
            this.tabSelected = tabButton.id.replace(this.tabId + '-', '');
            this.tabRepositionMarker(tabButton);
        },
        tabRepositionMarker(tabButton){
            this.$refs.tabMarker.style.width=tabButton.offsetWidth + 'px';
            this.$refs.tabMarker.style.height=tabButton.offsetHeight + 'px';
            this.$refs.tabMarker.style.left=tabButton.offsetLeft + 'px';
        },
        tabContentActive(tabContent){
            return this.tabSelected == tabContent.id.replace(this.tabId + '-content-', '');
        }
    }"
        x-init="tabRepositionMarker($refs.tabButtons.firstElementChild);"
        class="relative lg:rounded-3xl lg:p-10 text-white">
        <div
          x-ref="tabButtons"
          class="relative inline-grid items-center justify-center h-10 grid-cols-2 p-1 bg-purple-900 rounded-full select-none">
          <button
            :id="$id(tabId)"
            @click="tabButtonClicked($el);"
            type="button"
            class="relative z-20 inline-flex items-center justify-center w-full h-8 px-3 text-sm font-medium transition-all rounded-full cursor-pointer whitespace-nowrap"
            >{sectionSeven.tabs[0].title}</button
          >
          <button
            :id="$id(tabId)"
            @click="tabButtonClicked($el);"
            type="button"
            class="relative z-20 inline-flex items-center justify-center w-full h-8 px-3 text-sm font-medium transition-all rounded-md cursor-pointer whitespace-nowrap"
            >{sectionSeven.tabs[1].title}</button
          >
          <div
            x-ref="tabMarker"
            class="absolute left-0 z-10 w-1/2 h-full duration-300 ease-out"
            x-cloak>
            <div class="w-full h-full bg-white/10 rounded-full shadow-sm"></div>
          </div>
        </div>
        <div class="relative w-full mt-2 content">
          <div
            :id="$id(tabId + '-content')"
            x-show="tabContentActive($el)"
            class="relative">
            <section
              class="grid grid-cols-1 lg:grid-cols-2 gap-6 lg:gap-24 lg:bg-[#14162c] lg:p-10 rounded-3xl">
              <div
                class="text-xs font-mono mt-4 rounded-2xl overflowhidden p-4 bg-[#14162c] 00">
                <Code
                  code={sectionSeven.tabs[0].codeSnippet}
                  lang="js"
                  theme="css-variables"
                />
              </div>
              <div class="h-full lg:ml-auto lg:-m-24">
                <img
                  src={sectionSeven.tabs[0].image}
                  alt="thumbnail"
                  class="rounded-3xl"
                />
              </div>
            </section>
          </div>
  
          <div
            :id="$id(tabId + '-content')"
            x-show="tabContentActive($el)"
            class="relative"
            x-cloak>
            <section
              class="grid grid-cols-1 lg:grid-cols-2 gap-6 lg:gap-24 lg:bg-[#14162c] lg:p-10 rounded-3xl">
              <div
                class="text-xs font-mono mt-4 rounded-2xl overflowhidden p-4 bg-[#14162c] 00">
                <Code
                  code={sectionSeven.tabs[0].codeSnippet}
                  lang="js"
                  theme="css-variables"
                />
              </div>
              <div class="h-full lg:ml-auto lg:-m-24">
                <img
                src={sectionSeven.tabs[1].image}
                  alt="thumbnail"
                  class="rounded-3xl"
                />
              </div>
            </section>
          </div>
        </div>
      </div>
    </div>
  </div>
  </section>


  <!-- Feature List -->

  <section>
    <div class="mx-auto max-w-7xl lg:px-16 md:px-12 px-8 xl:px-24 py-12 items-center mt-20">
      <div>
        <h2 class="inline-flex items-center text-blue-600">
          <span class="text-base font-medium tracking-tight">{sectionData.mainTitle}</span>
        </h2>
        <h2 class="text-purple-900 font-semibold tracking-tighter lg:text-5xl mt-6 text-3xl">
          {sectionData.mainSubTitle}
        </h2>
        <div class="max-w-xl mt-6">
          <p class="text-slate-500">{sectionData.description}</p>
        </div>
      </div>
      <div class="mx-auto text-left mt-12">
        <div class="gap-x-2 gap-y-14 lg:gap-12 grid grid-cols-1 lg:grid-cols-3">
          {sectionData.articles.map((article) => (
            <article>
              <div>
                <p class="font-semibold text-purple-900 text-base">{article.title}</p>
                <div class="mt-6">
                  <ul role="list" class="order-last flex flex-col gap-y-2 text-slate-500 text-sm">
                    {article.features.map((feature) => (
                      <li class="flex items-start">
                        <svg
                        xmlns="http://www.w3.org/2000/svg"
                        class="icon icon-tabler icon-tabler-circle-check"
                        width="20"
                        height="20"
                        viewBox="0 0 24 24"
                        stroke-width="2"
                        stroke="currentColor"
                        fill="none"
                        stroke-linecap="round"
                        stroke-linejoin="round">
                        <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                        <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0"
                        ></path>
                        <path d="M9 12l2 2l4 -4"></path>
                      </svg>
                        <span class="ml-4">{feature}</span>
                      </li>
                    ))}
                  </ul>
                </div>
              </div>
            </article>
          ))}
        </div>
      </div>
    </div>
  </section>  

  <!-- Faqs -->

  <section>
    <div class="mx-auto max-w-7xl lg:px-16 md:px-12 px-8 xl:px-24 py-24 items-center">
      <div>
        <h2 class="inline-flex items-center text-blue-600">
          <span class="text-base font-medium tracking-tight">{faq.title}</span>
        </h2>
        <h2 class="text-purple-900 font-semibold tracking-tighter lg:text-5xl mt-6 text-3xl">
          {faq.subtitle}
        </h2>
        <div class="mt-12 space-y-12 bg-slate-50 rounded-3xl p-4 lg:p-10 divide-y">
          {faq.questions.map((faq, index) => (
            <div key={index} class={`grid grid-cols-1 gap-4 ${index !== 0 ? 'pt-4 lg:pt-12' : ''} lg:grid-cols-3`}>
              <div class="flex flex-col flex-shrink-0 mb-5 lg:pr-12">
                <span class="font-semibold text-purple-900">{faq.question}</span>
              </div>
              <div class="lg:col-span-2">
                <p class="text-slate-500">{faq.answer}</p>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  </section>
  

  <CtaOne />
</BaseLayout>
